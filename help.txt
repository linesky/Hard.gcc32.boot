; comment line

clc clear carry flag
stc set carry flag
clz clear zero flag
stz set zero flag
cld clear direction flag
std set direction flag
mov extange values
add add math
sub sub math
mul mult math
div divide math
or or logic bit
and and logic bit
inc add + 1 math
dec sub 1 math
cmp compare and test if registers for flags
: jmp call label
jmp jumps into
jnz jump if zero flags not set
jz  jump if zero flag is set
jc  jump if carry flang is set
jnc jump into label if carry flag is clear
jl  jump if compare is less
jnl jump if compare is not less
jg  jump if compare is grather
jng jump if compare is no grather
je  jump if is equal
jne jmp if not equal
call jump into label waiting for a return instruction
ret return fro a call back

 

